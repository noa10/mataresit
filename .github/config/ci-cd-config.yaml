# CI/CD Pipeline Configuration for Paperless Maverick
# Defines pipeline behavior, quality gates, and deployment policies
# Version: 1.0.0

# Global CI/CD settings
global:
  version: "1.0.0"
  project_name: "paperless-maverick"
  default_node_version: "18"
  registry: "ghcr.io"
  image_retention_days: 30
  artifact_retention_days: 7

# Environment-specific configurations
environments:
  production:
    deployment_policy:
      requires_approval: true
      approval_timeout: 3600  # 1 hour
      auto_rollback_enabled: true
      deployment_window: "09:00-17:00 UTC"
      deployment_days: ["monday", "tuesday", "wednesday", "thursday"]
      
    quality_gates:
      security_gate:
        enabled: true
        max_critical_vulnerabilities: 0
        max_high_vulnerabilities: 2
        max_medium_vulnerabilities: 10
        container_scan_required: true
        secrets_scan_required: true
        
      performance_gate:
        enabled: true
        max_p95_response_time: 2000  # ms
        max_error_rate: 0.01  # 1%
        min_performance_score: 80
        load_test_required: true
        
      code_quality_gate:
        enabled: true
        eslint_required: true
        typescript_check_required: true
        test_coverage_threshold: 80
        
    deployment_strategy:
      default: "rolling"
      allowed: ["rolling", "blue-green"]
      rollback_strategy: "immediate"
      health_check_timeout: 600
      
  staging:
    deployment_policy:
      requires_approval: false
      auto_rollback_enabled: true
      deployment_window: "00:00-23:59 UTC"
      deployment_days: ["monday", "tuesday", "wednesday", "thursday", "friday"]
      
    quality_gates:
      security_gate:
        enabled: true
        max_critical_vulnerabilities: 1
        max_high_vulnerabilities: 5
        max_medium_vulnerabilities: 20
        container_scan_required: true
        secrets_scan_required: true
        
      performance_gate:
        enabled: true
        max_p95_response_time: 3000  # ms
        max_error_rate: 0.05  # 5%
        min_performance_score: 70
        load_test_required: true
        
      code_quality_gate:
        enabled: true
        eslint_required: true
        typescript_check_required: true
        test_coverage_threshold: 70
        
    deployment_strategy:
      default: "rolling"
      allowed: ["rolling", "blue-green", "canary"]
      rollback_strategy: "automatic"
      health_check_timeout: 300
      
  development:
    deployment_policy:
      requires_approval: false
      auto_rollback_enabled: false
      deployment_window: "00:00-23:59 UTC"
      deployment_days: ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
      
    quality_gates:
      security_gate:
        enabled: true
        max_critical_vulnerabilities: 3
        max_high_vulnerabilities: 10
        max_medium_vulnerabilities: 50
        container_scan_required: false
        secrets_scan_required: true
        
      performance_gate:
        enabled: false
        max_p95_response_time: 5000  # ms
        max_error_rate: 0.10  # 10%
        min_performance_score: 60
        load_test_required: false
        
      code_quality_gate:
        enabled: true
        eslint_required: true
        typescript_check_required: true
        test_coverage_threshold: 60
        
    deployment_strategy:
      default: "rolling"
      allowed: ["rolling"]
      rollback_strategy: "manual"
      health_check_timeout: 180

# Pipeline stages configuration
pipeline_stages:
  code_quality:
    enabled: true
    parallel_execution: true
    timeout: 600  # 10 minutes
    checks:
      - eslint
      - typescript
      - prettier
      - security_audit
      - secrets_scan
      
  testing:
    enabled: true
    parallel_execution: false
    timeout: 1800  # 30 minutes
    test_suites:
      - unit_tests
      - integration_tests
      - performance_tests
    coverage_reporting: true
    
  build_and_scan:
    enabled: true
    parallel_execution: true
    timeout: 1200  # 20 minutes
    build_targets:
      - application
      - worker
    security_scans:
      - container_vulnerability_scan
      - dependency_scan
      - license_scan
      
  deployment_gates:
    enabled: true
    parallel_execution: true
    timeout: 900  # 15 minutes
    gates:
      - security_gate
      - performance_gate
      - compliance_gate
      
  deployment:
    enabled: true
    parallel_execution: false
    timeout: 1800  # 30 minutes
    phases:
      - database_migration
      - infrastructure_deployment
      - application_deployment
      - monitoring_deployment
      
  post_deployment:
    enabled: true
    parallel_execution: true
    timeout: 1200  # 20 minutes
    validations:
      - health_checks
      - smoke_tests
      - performance_validation
      - integration_validation

# Security scanning configuration
security_scanning:
  npm_audit:
    enabled: true
    audit_level: "moderate"
    fail_on_critical: true
    fail_on_high: true
    
  snyk:
    enabled: true
    severity_threshold: "high"
    fail_on_issues: true
    monitor_dependencies: true
    
  trivy:
    enabled: true
    severity_levels: ["CRITICAL", "HIGH", "MEDIUM"]
    scan_types: ["vuln", "config", "secret"]
    fail_on_critical: true
    
  trufflehog:
    enabled: true
    scan_depth: 100
    only_verified: true
    fail_on_secrets: true
    
  owasp_zap:
    enabled: true
    scan_type: "baseline"
    target_environments: ["staging"]
    fail_on_high: true

# Testing configuration
testing:
  unit_tests:
    enabled: true
    framework: "jest"
    coverage_threshold: 80
    parallel_execution: true
    
  integration_tests:
    enabled: true
    framework: "jest"
    test_environment: "docker"
    database_required: true
    
  performance_tests:
    enabled: true
    framework: "k6"
    load_profiles:
      - name: "baseline"
        duration: "2m"
        target_users: 10
      - name: "stress"
        duration: "5m"
        target_users: 50
    thresholds:
      response_time_p95: 2000
      error_rate: 0.05
      
  e2e_tests:
    enabled: false
    framework: "playwright"
    browsers: ["chromium", "firefox"]
    parallel_execution: true

# Build configuration
build:
  docker:
    enabled: true
    multi_platform: true
    platforms: ["linux/amd64", "linux/arm64"]
    cache_enabled: true
    cache_mode: "max"
    
  application:
    build_command: "npm run build"
    output_directory: "dist"
    optimization: true
    
  worker:
    build_command: "npm run build:worker"
    output_directory: "dist-worker"
    optimization: true

# Notification configuration
notifications:
  slack:
    enabled: true
    webhook_url_secret: "SLACK_WEBHOOK_URL"
    channels:
      success: "#deployments"
      failure: "#alerts"
      warning: "#deployments"
    notify_on:
      - deployment_success
      - deployment_failure
      - security_gate_failure
      - performance_gate_failure
      
  email:
    enabled: false
    smtp_server: "smtp.gmail.com"
    smtp_port: 587
    from_address: "ci-cd@paperless-maverick.com"
    recipients:
      - "team@paperless-maverick.com"
    notify_on:
      - deployment_failure
      - security_gate_failure
      
  github:
    enabled: true
    deployment_status: true
    commit_status: true
    pr_comments: true

# Monitoring and metrics
monitoring:
  deployment_metrics:
    enabled: true
    metrics:
      - deployment_frequency
      - deployment_success_rate
      - deployment_duration
      - rollback_frequency
      - lead_time
      - recovery_time
      
  quality_metrics:
    enabled: true
    metrics:
      - test_coverage
      - code_quality_score
      - security_score
      - performance_score
      - technical_debt
      
  integration:
    prometheus:
      enabled: true
      push_gateway: "http://prometheus-pushgateway:9091"
      job_name: "ci-cd-pipeline"
      
    grafana:
      enabled: true
      dashboard_id: "ci-cd-metrics"
      
    datadog:
      enabled: false
      api_key_secret: "DATADOG_API_KEY"

# Feature flags
feature_flags:
  parallel_testing: true
  advanced_security_scanning: true
  performance_regression_detection: true
  automatic_dependency_updates: false
  canary_deployments: true
  
  rollout_percentages:
    parallel_testing: 100
    advanced_security_scanning: 75
    performance_regression_detection: 50
    canary_deployments: 25

# Compliance and governance
compliance:
  audit_logging:
    enabled: true
    log_level: "detailed"
    retention_days: 90
    
  approval_workflows:
    production_deployment:
      required: true
      approvers: ["team-leads", "devops-team"]
      minimum_approvals: 1
      
    security_exceptions:
      required: true
      approvers: ["security-team"]
      minimum_approvals: 1
      
  change_management:
    enabled: true
    ticket_integration: "github-issues"
    require_change_ticket: true
    
  documentation:
    deployment_runbooks: true
    incident_response_plans: true
    rollback_procedures: true

# Integration settings
integrations:
  github:
    branch_protection:
      enabled: true
      required_status_checks:
        - "code-quality-security"
        - "testing"
        - "build-and-scan"
      require_pull_request_reviews: true
      dismiss_stale_reviews: true
      
  kubernetes:
    cluster_configs:
      production: "PRODUCTION_KUBECONFIG"
      staging: "STAGING_KUBECONFIG"
      development: "DEVELOPMENT_KUBECONFIG"
    namespace_isolation: true
    rbac_enabled: true
    
  container_registry:
    registry: "ghcr.io"
    image_scanning: true
    vulnerability_database_updates: true
    
  secrets_management:
    provider: "github-secrets"
    rotation_enabled: false
    encryption_at_rest: true

# Error handling and recovery
error_handling:
  retry_policy:
    max_attempts: 3
    backoff_strategy: "exponential"
    initial_delay: 30
    max_delay: 300
    
  failure_handling:
    continue_on_warning: true
    fail_fast_on_critical: true
    automatic_rollback: true
    
  timeout_handling:
    default_timeout: 1800
    stage_specific_timeouts: true
    timeout_escalation: true

# Performance optimization
performance:
  caching:
    enabled: true
    cache_types:
      - "npm-dependencies"
      - "docker-layers"
      - "build-artifacts"
    cache_retention: "7d"
    
  parallel_execution:
    enabled: true
    max_parallel_jobs: 4
    resource_limits:
      cpu: "2"
      memory: "4Gi"
      
  resource_optimization:
    build_optimization: true
    test_optimization: true
    deployment_optimization: true
