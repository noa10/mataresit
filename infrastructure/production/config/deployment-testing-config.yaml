# Deployment Testing Configuration
# Comprehensive testing framework configuration for Paperless Maverick deployments
# This file defines test suites, quality gates, performance benchmarks, and acceptance criteria

# Global testing settings
testing:
  # Test execution configuration
  execution:
    parallel_enabled: true
    max_parallel_jobs: 4
    timeout_seconds: 1800  # 30 minutes
    retry_attempts: 2
    fail_fast: false
    
  # Test environment configuration
  environment:
    test_database_url: "postgresql://test_user:test_pass@localhost:5433/paperless_maverick_test"
    test_supabase_url: "http://127.0.0.1:54331"
    test_supabase_anon_key: "test-anon-key"
    mock_external_services: true
    cleanup_after_tests: true
    
  # Reporting configuration
  reporting:
    formats: ["json", "html", "junit", "markdown"]
    output_directory: "reports/testing"
    include_coverage: true
    include_performance_metrics: true
    include_screenshots: true
    retention_days: 30

# Test suites configuration
test_suites:
  # Quick test suite - essential tests only
  quick:
    description: "Essential tests for rapid feedback"
    estimated_duration: "5 minutes"
    tests:
      unit_tests:
        enabled: true
        framework: "vitest"
        coverage_threshold: 70
        timeout: 300
        
      smoke_tests:
        enabled: true
        framework: "playwright"
        timeout: 180
        
      security_scan:
        enabled: true
        severity_threshold: "critical"
        timeout: 300
        
  # Standard test suite - comprehensive testing
  standard:
    description: "Standard test suite for staging deployments"
    estimated_duration: "15 minutes"
    tests:
      unit_tests:
        enabled: true
        framework: "vitest"
        coverage_threshold: 80
        timeout: 600
        
      integration_tests:
        enabled: true
        framework: "vitest"
        timeout: 900
        
      api_tests:
        enabled: true
        framework: "jest"
        timeout: 600
        
      security_scan:
        enabled: true
        severity_threshold: "high"
        timeout: 600
        
      performance_tests:
        enabled: true
        framework: "k6"
        duration: "2m"
        timeout: 300
        
  # Comprehensive test suite - full testing
  comprehensive:
    description: "Full test suite for production deployments"
    estimated_duration: "30 minutes"
    tests:
      unit_tests:
        enabled: true
        framework: "vitest"
        coverage_threshold: 85
        timeout: 900
        
      integration_tests:
        enabled: true
        framework: "vitest"
        timeout: 1200
        
      api_tests:
        enabled: true
        framework: "jest"
        timeout: 900
        
      e2e_tests:
        enabled: true
        framework: "playwright"
        browsers: ["chromium", "firefox"]
        timeout: 1800
        
      performance_tests:
        enabled: true
        framework: "k6"
        duration: "5m"
        timeout: 600
        
      load_tests:
        enabled: true
        framework: "k6"
        duration: "10m"
        timeout: 900
        
      security_scan:
        enabled: true
        severity_threshold: "medium"
        timeout: 900
        
      accessibility_tests:
        enabled: true
        framework: "axe"
        timeout: 600

# Quality gates configuration
quality_gates:
  # Relaxed quality gates for development
  relaxed:
    description: "Relaxed thresholds for development environment"
    thresholds:
      unit_test_coverage: 70
      integration_test_success_rate: 90
      api_test_success_rate: 95
      performance_p95_response_time: 3000  # ms
      performance_p99_response_time: 5000  # ms
      error_rate_threshold: 5  # percentage
      security_critical_issues: 2
      security_high_issues: 10
      code_quality_score: 6
      accessibility_score: 80
      
  # Standard quality gates for staging
  standard:
    description: "Standard thresholds for staging environment"
    thresholds:
      unit_test_coverage: 80
      integration_test_success_rate: 95
      api_test_success_rate: 98
      performance_p95_response_time: 2500  # ms
      performance_p99_response_time: 4000  # ms
      error_rate_threshold: 2  # percentage
      security_critical_issues: 1
      security_high_issues: 7
      code_quality_score: 7
      accessibility_score: 90
      
  # Strict quality gates for production
  strict:
    description: "Strict thresholds for production environment"
    thresholds:
      unit_test_coverage: 85
      integration_test_success_rate: 98
      api_test_success_rate: 99
      performance_p95_response_time: 2000  # ms
      performance_p99_response_time: 3000  # ms
      error_rate_threshold: 1  # percentage
      security_critical_issues: 0
      security_high_issues: 5
      code_quality_score: 8
      accessibility_score: 95

# Performance benchmarks configuration
performance_benchmarks:
  # API performance benchmarks
  api_performance:
    endpoints:
      - path: "/api/health"
        method: "GET"
        expected_response_time_p95: 100  # ms
        expected_response_time_p99: 200  # ms
        
      - path: "/api/receipts"
        method: "GET"
        expected_response_time_p95: 500  # ms
        expected_response_time_p99: 1000  # ms
        
      - path: "/api/receipts"
        method: "POST"
        expected_response_time_p95: 2000  # ms
        expected_response_time_p99: 5000  # ms
        
      - path: "/api/search"
        method: "POST"
        expected_response_time_p95: 1000  # ms
        expected_response_time_p99: 2000  # ms
        
  # Database performance benchmarks
  database_performance:
    queries:
      - name: "receipt_lookup"
        expected_execution_time: 50  # ms
        
      - name: "search_query"
        expected_execution_time: 200  # ms
        
      - name: "embedding_insert"
        expected_execution_time: 100  # ms
        
  # System resource benchmarks
  system_performance:
    cpu_utilization_max: 80  # percentage
    memory_utilization_max: 85  # percentage
    disk_io_max: 1000  # MB/s
    network_io_max: 500  # MB/s

# Acceptance criteria configuration
acceptance_criteria:
  # Functional acceptance criteria
  functional:
    user_authentication:
      - "Users can register with email and password"
      - "Users can login with Google OAuth"
      - "Users can logout successfully"
      - "Session management works correctly"
      
    receipt_management:
      - "Users can upload receipt images"
      - "Receipt processing completes within 30 seconds"
      - "Receipt data extraction accuracy > 90%"
      - "Users can view receipt details"
      - "Users can edit receipt information"
      - "Users can delete receipts"
      
    search_functionality:
      - "Users can search receipts by text"
      - "Users can search receipts by date range"
      - "Users can search receipts by amount"
      - "Search results are relevant and accurate"
      - "Search response time < 2 seconds"
      
    ai_features:
      - "AI vision processing works correctly"
      - "Embedding generation completes successfully"
      - "AI search provides relevant results"
      - "AI processing handles errors gracefully"
      
  # Non-functional acceptance criteria
  non_functional:
    performance:
      - "Application loads within 3 seconds"
      - "API responses within SLA thresholds"
      - "Database queries optimized"
      - "System handles concurrent users"
      
    security:
      - "No critical security vulnerabilities"
      - "Authentication and authorization working"
      - "Data encryption at rest and in transit"
      - "Input validation and sanitization"
      
    reliability:
      - "System uptime > 99.9%"
      - "Error handling and recovery"
      - "Data backup and recovery"
      - "Monitoring and alerting active"
      
    usability:
      - "User interface is intuitive"
      - "Accessibility standards met"
      - "Mobile responsiveness"
      - "Cross-browser compatibility"

# Test data configuration
test_data:
  # Sample test data
  sample_receipts:
    - name: "grocery_receipt_1"
      file: "fixtures/grocery-receipt-1.pdf"
      expected_total: 45.67
      expected_items: 8
      
    - name: "restaurant_receipt_1"
      file: "fixtures/restaurant-receipt-1.jpg"
      expected_total: 28.50
      expected_items: 3
      
    - name: "gas_receipt_1"
      file: "fixtures/gas-receipt-1.png"
      expected_total: 52.30
      expected_items: 1
      
  # Test user accounts
  test_users:
    - email: "test.user1@example.com"
      password: "TestPassword123!"
      role: "user"
      
    - email: "test.admin@example.com"
      password: "AdminPassword123!"
      role: "admin"

# Integration settings
integrations:
  # CI/CD integration
  ci_cd:
    github_actions:
      enabled: true
      workflow_file: ".github/workflows/deployment-testing.yml"
      
    quality_gates:
      block_on_failure: true
      require_approval: true
      
  # Monitoring integration
  monitoring:
    prometheus:
      enabled: true
      metrics_endpoint: "/metrics"
      
    grafana:
      enabled: true
      dashboard_id: "deployment-testing"
      
  # Notification integration
  notifications:
    slack:
      enabled: false
      webhook_url: ""
      channel: "#deployment-testing"
      
    email:
      enabled: true
      recipients: ["team@mataresit.com"]
      
# Environment-specific overrides
environments:
  development:
    testing:
      execution:
        fail_fast: false
        retry_attempts: 1
    quality_gates:
      default: "relaxed"
    performance_benchmarks:
      api_performance:
        endpoints:
          - path: "/api/health"
            expected_response_time_p95: 200
            
  staging:
    testing:
      execution:
        fail_fast: true
        retry_attempts: 2
    quality_gates:
      default: "standard"
    performance_benchmarks:
      api_performance:
        endpoints:
          - path: "/api/health"
            expected_response_time_p95: 150
            
  production:
    testing:
      execution:
        fail_fast: true
        retry_attempts: 3
    quality_gates:
      default: "strict"
    performance_benchmarks:
      api_performance:
        endpoints:
          - path: "/api/health"
            expected_response_time_p95: 100
